// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Permission {
  USER
  PAGE
  NEWS
  ANIMAL
}

enum AnimalType {
  CAT
  DOG
}

enum AnimalGender {
  MALE
  FEMALE
}

enum AnimalLocation {
  DomTymczasowy
  Hotel
  Schronisko
  KociaChatka
  UOsobyPrywatnej
}

enum AnimalCategory {
  PilniePotrzebuja
  Weterani
  DoAdopcji
  ZnalazlyDom
  ZaTeczowymMostem
  NiedawnoZnalezione
}

enum VirtualCaretakerType {
  NiePrzypisany
  Szuka
  Znalazl
}

model User {
  id           Int               @id @default(autoincrement())
  login        String            @unique
  passwordHash String
  firstName    String
  lastName     String
  isActive     Boolean           @default(true)
  sessions     Session[]
  permissions  UserPermissions[]
}

model Page {
  id      String @id @default(uuid())
  title    String @unique
  content String
}

model News {
  id                  String    @id @default(uuid())
  title               String
  description         String
  content             String
  isPublished         Boolean   @default(false)
  createdAt           DateTime  @default(now())
  imageName           String
}

model Animal {
  id                    String    @id @default(uuid())
  name                  String
  type                  AnimalType
  gender                AnimalGender
  description           String
  category              AnimalCategory
  location              AnimalLocation?
  virtualCaretakerType  VirtualCaretakerType
  virtualCaretakerName  String?
  isPublic              Boolean
  images                AnimalImage[]
  addedDate             DateTime  @default(now())
}

model AnimalImage {
  id            String     @id @default(uuid())
  order         Int
  animalId      String
  user          Animal     @relation(fields: [animalId], references: [id])
  path          String
}

model Session {
  id         String   @id @default(uuid())
  userId     Int
  expiryTime DateTime
  user       User     @relation(fields: [userId], references: [id])
}

model UserPermissions {
  userId     Int
  user       User       @relation(fields: [userId], references: [id])
  permission Permission

  @@id([permission, userId])
  @@unique([userId, permission])
}
