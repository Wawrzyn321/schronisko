Rehydration - proces synchronizacji wirtualnego DOMu (wygenerowanego po załadowaniu JSa na stronie) z DOMem otrzymanym z serwera (wygenerowanego przez SSR). Innymi słowy, React jest doczepiany do gotowego DOMu.
Różnica między rehydration a render (w Reakcie) jest taka, że przy renderze React jest gotowy na zmiany stanu itd, a przy rehydration zakłada, że DOM się nie zmieni.
Proces łączenia w czasie rehydration nie zastępuje DOMu, tylko doczepia tam fragmenty z wirtualnego DOMu (jeśli to konieczne).
Może to prowadzić do błędów, jeśli DOM utworzony w czasie SSR różni się od tego reaktywnego, dlatego jeśli pewna funkcjonalność ma zwracać różny kod w zależności od stanu na froncie, to niech w czasie SSR nie zwraca nic - można to rozróżnić useEffect na zamontowanie (nie zostanie wywołany w czasie SSR).

Rodzaje:
- static site generation - generuje przy budowaniu apki
- server side rendering - renderuje na serwerze za każdym żądaniem => getServerSideProps
- server side rendering with rehydration - ditto + front ponawia
- static site generation with data - generuje przy budowaniu apki, wykonując wybrane żądania => getStaticProps
- Client-side Rendering - statycznie część generujemy przy buildzie, dynamiczne dane są pobierane u klienta - dobre do stronek niewymagających SEO


